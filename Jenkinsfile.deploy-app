pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        BACKEND_REPO = 'iapsingh/mean-crud-app-backend'
        FRONTEND_REPO = 'iapsingh/mean-crud-app-frontend'
        COMPOSE_FILE = "${WORKSPACE}/docker-compose.server.yml"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/iabhishekpratap/mean-crud-app.git'
            }
        }

        stage('Docker Login') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('Get Latest Tags') {
            steps {
                script {
                    // Get the latest numerical tags
                    env.LATEST_BACKEND_TAG = sh(script: "curl -s https://hub.docker.com/v2/repositories/${BACKEND_REPO}/tags?page_size=1 | jq -r '.results[0].name'", returnStdout: true).trim()
                    env.LATEST_FRONTEND_TAG = sh(script: "curl -s https://hub.docker.com/v2/repositories/${FRONTEND_REPO}/tags?page_size=1 | jq -r '.results[0].name'", returnStdout: true).trim()

                    echo "Latest backend tag: ${env.LATEST_BACKEND_TAG}"
                    echo "Latest frontend tag: ${env.LATEST_FRONTEND_TAG}"
                }
            }
        }

        stage('Update Docker Compose Tags') {
            steps {
                script {
                    // Replace REPLACE_TAG placeholders in docker-compose file
                    sh "sed -i 's/REPLACE_TAG/${env.LATEST_BACKEND_TAG}/g' ${COMPOSE_FILE}"
                    sh "sed -i 's/REPLACE_TAG/${env.LATEST_FRONTEND_TAG}/g' ${COMPOSE_FILE}"
                }
            }
        }

        stage('Deploy Containers') {
            steps {
                script {
                    echo "Deploying backend and frontend with latest tags..."
                    sh "docker compose -f ${COMPOSE_FILE} pull"
                    sh "docker compose -f ${COMPOSE_FILE} up -d"
                }
            }
        }
    }

    post {
        always {
            echo 'Deployment finished'
        }
    }
}
